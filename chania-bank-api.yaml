swagger: '2.0'
info:
  version: '1.0'
  title: Chania Bank - PSD2 Services v1.0
  description: >-
    Subset of the Berlin Group's NextGenPSD2 Framework Version 1.3.2 published
    on March 28th 2019
  termsOfService: ''
  contact:
    url: 'https://developer.chaniabank.com/api'
    email: developer@chaniabank.gr
basePath: /psd2
paths:
  '/v1/consents/{consentId}/authorisations':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Get Consent Authorisation Sub-Resources Request
      description: >-
        Return a list of all authorisation subresources IDs which have been
        created.  This function returns an array of hyperlinks to all generated
        authorisation sub-resources.
      operationId: GetConsentAuthorisation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Authorisations'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - AccountInformationServiceApi
      summary: Start the authorisation process for a consent
      description: >-
        Create an authorisation sub-resource and start the authorisation process
        of a consent.  The message might in addition transmit authentication and
        authorisation related data.  his method is iterated n times for a n
        times SCA authorisation in a  corporate context, each creating an own
        authorisation sub-endpoint for  the corresponding PSU authorising the
        consent.  The ASPSP might make the usage of this access method
        unnecessary,  since the related authorisation resource will be
        automatically created by  the ASPSP after the submission of the consent
        data with the first POST consents call.  The start authorisation process
        is a process which is needed for creating a new authorisation  or
        cancellation sub-resource.   This applies in the following scenarios:   
        * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the
        preceding Payment      Initiation Response that an explicit start of the
        authorisation process is needed by the TPP.      The
        'startAuthorisation' hyperlink can transport more information about data
        which needs to be      uploaded by using the extended forms.     *
        'startAuthorisationWithPsuIdentfication',      *
        'startAuthorisationWithPsuAuthentication'      *
        'startAuthorisationWithEncryptedPsuAuthentication'     *
        'startAuthorisationWithAuthentciationMethodSelection'    * The related
        payment initiation cannot yet be executed since a multilevel SCA is
        mandated.   * The ASPSP has indicated with an 'startAuthorisation'
        hyperlink in the preceding      Payment Cancellation Response that an
        explicit start of the authorisation process is needed by the TPP.     
        The 'startAuthorisation' hyperlink can transport more information about
        data which needs to be uploaded      by using the extended forms as
        indicated above.   * The related payment cancellation request cannot be
        applied yet since a multilevel SCA is mandate for      executing the
        cancellation.   * The signing basket needs to be authorised yet.
      operationId: StartConsentAuthorisation
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: tPPRedirectPreferred
          in: header
          description: >-
            If it equals \"true\", the TPP prefers a redirect over an embedded
            SCA approach. If it equals \"false\", the TPP prefers not to be
            redirected for SCA. The ASPSP will then choose between the Embedded
            or the Decoupled SCA approach, depending on the choice of the SCA
            procedure by the TPP/PSU. If the parameter is not used, the ASPSP
            will choose the SCA approach to be applied depending on the SCA
            method chosen by the TPP/PSU.
          required: false
          type: string
        - name: tPPRedirectURI
          in: header
          description: >-
            URI of the TPP, where the transaction flow shall be redirected to
            after a Redirect.  Mandated for the Redirect SCA Approach,
            specifically  when TPP-Redirect-Preferred equals \"true\". It is
            recommended to always use this header field.  **Remark for
            Future:**  This field might be changed to mandatory in the next
            version of the specification.
          required: false
          type: string
        - name: tPPNokRedirectURI
          in: header
          description: >-
            If this URI is contained, the TPP is asking to redirect the
            transaction flow to this address instead of the TPP-Redirect-URI in
            case of a negative result of the redirect SCA method. This might be
            ignored by the ASPSP.
          required: false
          type: string
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.StartScaprocessResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/consents/{consentId}':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Get Consent Request
      description: >-
        Returns the content of an account information consent object.  This is
        returning the data for the TPP especially in cases,  where the consent
        was directly managed between ASPSP and PSU e.g. in a re-direct SCA
        Approach.
      operationId: GetConsentInformation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/ChaniaBank.API.Models.ConsentInformationResponse200Json
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/consents/{consentId}/authorisations/{authorisationId}':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Read the SCA status of the consent authorisation.
      description: >-
        This method returns the SCA status of a consent initiation's
        authorisation sub-resource.
      operationId: GetConsentScaStatus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: authorisationId
          in: path
          description: Resource identification of the related SCA.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ScaStatusResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    put:
      tags:
        - AccountInformationServiceApi
      summary: Update PSU Data for consents
      description: "This method update PSU data on the consents  resource if needed.  It may authorise a consent within the Embedded SCA Approach where needed.  \r\n            Independently from the SCA Approach it supports e.g. the selection of  the authentication method and a non-SCA PSU authentication.  \r\n            This methods updates PSU data on the cancellation authorisation resource if needed.   \r\n            There are several possible Update PSU Data requests in the context of a consent request if needed,  which depends on the SCA approach:  \r\n            * Redirect SCA Approach:   A specific Update PSU Data Request is applicable for      \r\n            * the selection of authentication methods, before choosing the actual SCA approach. \r\n            * Decoupled SCA Approach:   A specific Update PSU Data Request is only applicable for   \r\n            * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information \r\n            Consent Request, or if no OAuth2 access token is used, or   * the selection of authentication methods. * Embedded SCA Approach:    \r\n            The Update PSU Data Request might be used    * to add credentials as a first factor authentication data of the PSU and   \r\n            * to select the authentication method and   * transaction authorisation.  The SCA Approach might depend on the chosen SCA method.  \r\n            For that reason, the following possible Update PSU Data request can apply to all SCA approaches:  * Select an SCA method in case of several \r\n            SCA methods are available for the customer.  There are the following request types on this access path:   \r\n            * Update PSU Identification   * Update PSU Authentication   * Select PSU Autorization Method      \r\n            WARNING: This method need a reduced header,      therefore many optional elements are not present.      \r\n            Maybe in a later version the access path will change.   * Transaction Authorisation     \r\n            WARNING: This method need a reduced header,      therefore many optional elements are not present.      \r\n            Maybe in a later version the access path will change."
      operationId: UpdateConsentsPsuData
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: authorisationId
          in: path
          description: Resource identification of the related SCA.
          required: true
          type: string
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/consents/{consentId}/status':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Consent status request
      description: Read the status of an account information consent resource.
      operationId: GetConsentStatus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: consentId
          in: path
          description: >-
            ID of the corresponding consent object as returned by an Account
            Information Consent Request.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ConsentStatusResponse200'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/accounts/{accountId}/transactions/{resourceId}':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Read Transaction Details
      description: >-
        Reads transaction details from a given transaction addressed by
        \"resourceId\" on a given account addressed by \"accountId\".  This call
        is only available on transactions as reported in a JSON format. 
        **Remark:** Please note that the PATH might be already given in detail
        by the corresponding entry of the response of the  \"Read Transaction
        List\" call within the _links subfield.
      operationId: GetTransactionDetails
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: accountId
          in: path
          description: >-
            This identification is denoting the addressed account.  The
            accountId is retrieved by using a \"Read Account List\" call.  The
            accountId is the \"id\" attribute of the account structure.  Its
            value is constant at least throughout the lifecycle of a given
            consent.
          required: true
          type: string
        - name: resourceId
          in: path
          description: >-
            This identification is given by the attribute resourceId of the
            corresponding entry of a transaction list.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: header
          description: >-
            This then contains the consentId of the related AIS consent, which
            was performed prior to this payment initiation.
          required: true
          type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.TransactionDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/accounts/{accountId}/transactions':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Read transaction list of an account
      description: >-
        Read transaction reports or transaction lists of a given account
        ddressed by \"accountId\", depending on the steering parameter 
        \"bookingStatus\" together with balances.  For a given account,
        additional parameters are e.g. the attributes \"dateFrom\" and
        \"dateTo\".  The ASPSP might add balance information, if transaction
        lists without balances are not supported.
      operationId: GetTransactionList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: accountId
          in: path
          description: >-
            This identification is denoting the addressed account.  The
            accountId is retrieved by using a \"Read Account List\" call.  The
            accountId is the \"id\" attribute of the account structure.  Its
            value is constant at least throughout the lifecycle of a given
            consent.
          required: true
          type: string
        - name: bookingStatus
          in: query
          description: >-
            Permitted codes are    * \"booked\",   * \"pending\" and    *
            \"both\" \"booked\" shall be supported by the ASPSP. To support the
            \"pending\" and \"both\" feature is optional for the ASPSP,  Error
            code if not supported in the online banking frontend
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: header
          description: >-
            This then contains the consentId of the related AIS consent, which
            was performed prior to this payment initiation.
          required: true
          type: string
        - name: dateFrom
          in: query
          description: >-
            Conditional: Starting date (inclusive the date dateFrom) of the
            transaction list, mandated if no delta access is required.  For
            booked transactions, the relevant date is the booking date.   For
            pending transactions, the relevant date is the entry date, which may
            not be transparent  neither in this API nor other channels of the
            ASPSP.
          required: false
          type: string
          format: date-time
        - name: dateTo
          in: query
          description: >-
            End date (inclusive the data dateTo) of the transaction list,
            default is \"now\" if not given.   Might be ignored if a delta
            function is used.  For booked transactions, the relevant date is the
            booking date.   For pending transactions, the relevant date is the
            entry date, which may not be transparent  neither in this API nor
            other channels of the ASPSP.
          required: false
          type: string
          format: date-time
        - name: entryReferenceFrom
          in: query
          description: >-
            This data attribute is indicating that the AISP is in favour to get
            all transactions after  the transaction with identification
            entryReferenceFrom alternatively to the above defined period.  This
            is a implementation of a delta access.  If this data element is
            contained, the entries \"dateFrom\" and \"dateTo\" might be ignored
            by the ASPSP  if a delta report is supported.  Optional if supported
            by API provider.
          required: false
          type: string
        - name: deltaList
          in: query
          description: >-
            This data attribute is indicating that the AISP is in favour to get
            all transactions after the last report access for this PSU on the
            addressed account. This is another implementation of a delta
            access-report. This delta indicator might be rejected by the ASPSP
            if this function is not supported. Optional if supported by API
            provider
          required: false
          type: boolean
        - name: withBalance
          in: query
          description: >-
            If contained, this function reads the list of accessible payment
            accounts including the booking balance,  if granted by the PSU in
            the related consent and available by the ASPSP.  This parameter
            might be ignored by the ASPSP.
          required: false
          type: boolean
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.TransactionsResponse200Json'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/accounts/{accountId}':
    get:
      tags:
        - AccountInformationServiceApi
      summary: Read Account Details
      description: >-
        Reads details about an account, with balances where required.  It is
        assumed that a consent of the PSU to  this access is already given and
        stored on the ASPSP system.  The addressed details of this account
        depends then on the stored consent addressed by consentId,  respectively
        the OAuth2 access token.  **NOTE:** The accountId can represent a
        multicurrency account.  In this case the currency code is set to
        \"XXX\".  Give detailed information about the addressed account.  Give
        detailed information about the addressed account together with balance
        information
      operationId: ReadAccountDetails
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: accountId
          in: path
          description: >-
            This identification is denoting the addressed account.  The
            accountId is retrieved by using a \"Read Account List\" call.  The
            accountId is the \"id\" attribute of the account structure.  Its
            value is constant at least throughout the lifecycle of a given
            consent.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: header
          description: >-
            This then contains the consentId of the related AIS consent, which
            was performed prior to this payment initiation.
          required: true
          type: string
        - name: withBalance
          in: query
          description: >-
            If contained, this function reads the list of accessible payment
            accounts including the booking balance,  if granted by the PSU in
            the related consent and available by the ASPSP.  This parameter
            might be ignored by the ASPSP.
          required: false
          type: boolean
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            HTTP request  IP Address field between PSU and TPP.  It shall be
            contained if and only if this request was actively initiated by the
            PSU.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.AccountDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /v1/funds-confirmations:
    post:
      tags:
        - ConfirmationOfFundsServiceApi
      summary: Confirmation of Funds Request
      description: >-
        Creates a confirmation of funds request at the ASPSP. Checks whether a
        specific amount is available at point of time of the request on an
        account linked to a given tuple card issuer(TPP)/card number, or
        addressed by IBAN and TPP respectively
      operationId: CheckAvailabilityOfFunds
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          description: Request body for a confirmation of funds request.
          required: false
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ConfirmationOfFunds'
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: consentId
          in: header
          description: >-
            This data element may be contained, if the payment initiation
            transaction is part of a session, i.e. combined AIS/PIS service.
            This then contains the consentId of the related AIS consent, which
            was performed prior to this payment initiation.
          required: false
          type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ConfirmationOfFundsResponse200'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /v1/opendata/branches:
    get:
      tags:
        - OpenDataServiceApi
      summary: Get Branches information
      operationId: GetBranches
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: if_Modified_Since
          in: query
          description: >-
            Used for conditional request, to retrieve data only if modified
            since a given date
          required: false
          type: string
        - name: if_None_Match
          in: query
          description: >-
            Used for conditional request, to retrieve data only if the given
            Etag value does not match
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChaniaBank.API.Models.Branch'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /v1/opendata/atm:
    get:
      tags:
        - OpenDataServiceApi
      summary: Successful response with a list of `ATM` data
      operationId: GetATMs
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: if_Modified_Since
          in: query
          description: >-
            Used for conditional request, to retrieve data only if modified
            since a given date
          required: false
          type: string
        - name: if_None_Match
          in: query
          description: >-
            Used for conditional request, to retrieve data only if the given
            Etag value does not match
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ChaniaBank.API.Models.ATM'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGAIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGAIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGAIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGAIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGAIS'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error406NGAIS'
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGAIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error429NGAIS'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: Get Payment Information
      description: Returns the content of a payment object
      operationId: GetPaymentInformation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    delete:
      tags:
        - PaymentInitiationServiceApi
      summary: Payment Cancellation Request
      description: >-
        This method initiates the cancellation of a payment.  Depending on the
        paymentService, the paymentProduct and the ASPSP's implementation,  this
        TPP call might be sufficient to cancel a payment.  If an authorisation
        of the payment cancellation is mandated by the ASPSP,  a corresponding
        hyperlink will be contained in the response message.  Cancels the
        addressed payment with resource identification paymentId if applicable
        to the paymentService, paymentProduct and received in product related
        timelines (e.g. before end of business day for scheduled payments of the
        last business day before the scheduled execution day).   The response to
        this DELETE command will tell the TPP whether the    * access method was
        rejected   * access method was successful, or   * access method is
        generally applicable, but further authorisation processes are needed.
      operationId: CancelPayment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '202':
          description: Received
          schema:
            $ref: >-
              #/definitions/ChaniaBank.API.Models.PaymentInitiationCancelResponse202
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPISCANC'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}/cancellation-authorisations/{cancellationId}':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: Read the SCA status of the payment cancellation's authorisation.
      description: >-
        This method returns the SCA status of a payment initiation's
        authorisation sub-resource.
      operationId: GetPaymentCancellationScaStatus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: cancellationId
          in: path
          description: Identification for cancellation resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ScaStatusResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    put:
      tags:
        - PaymentInitiationServiceApi
      summary: Update PSU Data for payment initiation cancellation
      description: >-
        This method updates PSU data on the cancellation authorisation resource
        if needed.  It may authorise a cancellation of the payment within the
        Embedded SCA Approach where needed.  Independently from the SCA Approach
        it supports e.g. the selection of  the authentication method and a
        non-SCA PSU authentication.  This methods updates PSU data on the
        cancellation authorisation resource if needed.   There are several
        possible Update PSU Data requests in the context of a cancellation
        authorisation within the payment initiation services needed,  which
        depends on the SCA approach:  * Redirect SCA Approach:   A specific
        Update PSU Data Request is applicable for      * the selection of
        authentication methods, before choosing the actual SCA approach. *
        Decoupled SCA Approach:   A specific Update PSU Data Request is only
        applicable for   * adding the PSU Identification, if not provided yet in
        the Payment Initiation Request or the Account Information Consent
        Request, or if no OAuth2 access token is used, or   * the selection of
        authentication methods. * Embedded SCA Approach:    The Update PSU Data
        Request might be used    * to add credentials as a first factor
        authentication data of the PSU and   * to select the authentication
        method and   * transaction authorisation.  The SCA Approach might depend
        on the chosen SCA method.  For that reason, the following possible
        Update PSU Data request can apply to all SCA approaches:  * Select an
        SCA method in case of several SCA methods are available for the
        customer.  There are the following request types on this access path:  
        * Update PSU Identification   * Update PSU Authentication   * Select PSU
        Autorization Method      WARNING: This method need a reduced
        header,      therefore many optional elements are not present.     
        Maybe in a later version the access path will change.   * Transaction
        Authorisation     WARNING: This method need a reduced header,     
        therefore many optional elements are not present.      Maybe in a later
        version the access path will change.
      operationId: UpdatePaymentCancellationPsuData
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: cancellationId
          in: path
          description: Identification for cancellation resource.
          required: true
          type: string
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}/authorisations':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: Get Payment Initiation Authorisation Sub-Resources Request
      description: >-
        Read a list of all authorisation subresources IDs which have been
        created.  This function returns an array of hyperlinks to all generated
        authorisation sub-resources.
      operationId: GetPaymentInitiationAuthorisation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Authorisations'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - PaymentInitiationServiceApi
      summary: Start the authorisation process for a payment initiation
      description: >-
        Create an authorisation sub-resource and start the authorisation
        process.  The message might in addition transmit authentication and
        authorisation related data.   This method is iterated n times for a n
        times SCA authorisation in a  corporate context, each creating an own
        authorisation sub-endpoint for  the corresponding PSU authorising the
        transaction.  The ASPSP might make the usage of this access method
        unnecessary in case  of only one SCA process needed, since the related
        authorisation resource  might be automatically created by the ASPSP
        after the submission of the  payment data with the first POST
        payments/{paymentProduct} call.  The start authorisation process is a
        process which is needed for creating a new authorisation  or
        cancellation sub-resource.   This applies in the following scenarios:   
        * The ASPSP has indicated with an 'startAuthorisation' hyperlink in the
        preceding Payment      Initiation Response that an explicit start of the
        authorisation process is needed by the TPP.      The
        'startAuthorisation' hyperlink can transport more information about data
        which needs to be      uploaded by using the extended forms.     *
        'startAuthorisationWithPsuIdentfication',      *
        'startAuthorisationWithPsuAuthentication'      *
        'startAuthorisationWithEncryptedPsuAuthentication'     *
        'startAuthorisationWithAuthentciationMethodSelection'    * The related
        payment initiation cannot yet be executed since a multilevel SCA is
        mandated.   * The ASPSP has indicated with an 'startAuthorisation'
        hyperlink in the preceding      Payment Cancellation Response that an
        explicit start of the authorisation process is needed by the TPP.     
        The 'startAuthorisation' hyperlink can transport more information about
        data which needs to be uploaded      by using the extended forms as
        indicated above.   * The related payment cancellation request cannot be
        applied yet since a multilevel SCA is mandate for      executing the
        cancellation.   * The signing basket needs to be authorised yet.
      operationId: StartPaymentAuthorisation
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: string
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: tPPRedirectPreferred
          in: header
          description: >-
            If it equals \"true\", the TPP prefers a redirect over an embedded
            SCA approach. If it equals \"false\", the TPP prefers not to be
            redirected for SCA. The ASPSP will then choose between the Embedded
            or the Decoupled SCA approach, depending on the choice of the SCA
            procedure by the TPP/PSU. If the parameter is not used, the ASPSP
            will choose the SCA approach to be applied depending on the SCA
            method chosen by the TPP/PSU.
          required: false
          type: string
        - name: tPPRedirectURI
          in: header
          description: >-
            URI of the TPP, where the transaction flow shall be redirected to
            after a Redirect.  Mandated for the Redirect SCA Approach,
            specifically  when TPP-Redirect-Preferred equals \"true\". It is
            recommended to always use this header field.  **Remark for
            Future:**  This field might be changed to mandatory in the next
            version of the specification.
          required: false
          type: string
        - name: tPPNokRedirectURI
          in: header
          description: >-
            If this URI is contained, the TPP is asking to redirect the
            transaction flow to this address instead of the TPP-Redirect-URI in
            case of a negative result of the redirect SCA method. This might be
            ignored by the ASPSP.
          required: false
          type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.StartScaprocessResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}/cancellation-authorisations':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: >-
        Will deliver an array of resource identifications to all generated
        cancellation authorisation sub-resources.
      description: Retrieve a list of all created cancellation authorisation sub-resources.
      operationId: GetPaymentInitiationCancellationAuthorisationInformation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    post:
      tags:
        - PaymentInitiationServiceApi
      summary: >-
        Start the authorisation process for the cancellation of the addressed
        payment
      description: >-
        Creates an authorisation sub-resource and start the authorisation
        process of the cancellation of the addressed payment.  The message might
        in addition transmit authentication and authorisation related data. 
        This method is iterated n times for a n times SCA authorisation in a 
        corporate context, each creating an own authorisation sub-endpoint for 
        the corresponding PSU authorising the cancellation-authorisation.  The
        ASPSP might make the usage of this access method unnecessary in case  of
        only one SCA process needed, since the related authorisation resource 
        might be automatically created by the ASPSP after the submission of the 
        payment data with the first POST payments/{paymentProduct} call.  The
        start authorisation process is a process which is needed for creating a
        new authorisation  or cancellation sub-resource.   This applies in the
        following scenarios:    * The ASPSP has indicated with an
        'startAuthorisation' hyperlink in the preceding Payment      Initiation
        Response that an explicit start of the authorisation process is needed
        by the TPP.      The 'startAuthorisation' hyperlink can transport more
        information about data which needs to be      uploaded by using the
        extended forms.     * 'startAuthorisationWithPsuIdentfication',      *
        'startAuthorisationWithPsuAuthentication'      *
        'startAuthorisationWithAuthentciationMethodSelection'    * The related
        payment initiation cannot yet be executed since a multilevel SCA is
        mandated.   * The ASPSP has indicated with an 'startAuthorisation'
        hyperlink in the preceding      Payment Cancellation Response that an
        explicit start of the authorisation process is needed by the TPP.     
        The 'startAuthorisation' hyperlink can transport more information about
        data which needs to be uploaded      by using the extended forms as
        indicated above.   * The related payment cancellation request cannot be
        applied yet since a multilevel SCA is mandate for      executing the
        cancellation.   * The signing basket needs to be authorised yet.
      operationId: StartPaymentInitiationCancellationAuthorisation
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: tPPRedirectPreferred
          in: header
          description: >-
            If it equals \"true\", the TPP prefers a redirect over an embedded
            SCA approach. If it equals \"false\", the TPP prefers not to be
            redirected for SCA. The ASPSP will then choose between the Embedded
            or the Decoupled SCA approach, depending on the choice of the SCA
            procedure by the TPP/PSU. If the parameter is not used, the ASPSP
            will choose the SCA approach to be applied depending on the SCA
            method chosen by the TPP/PSU.
          required: false
          type: string
        - name: tPPRedirectURI
          in: header
          description: >-
            URI of the TPP, where the transaction flow shall be redirected to
            after a Redirect.  Mandated for the Redirect SCA Approach,
            specifically  when TPP-Redirect-Preferred equals \"true\". It is
            recommended to always use this header field.  **Remark for
            Future:**  This field might be changed to mandatory in the next
            version of the specification.
          required: false
          type: string
        - name: tPPNokRedirectURI
          in: header
          description: >-
            If this URI is contained, the TPP is asking to redirect the
            transaction flow to this address instead of the TPP-Redirect-URI in
            case of a negative result of the redirect SCA method. This might be
            ignored by the ASPSP.
          required: false
          type: string
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.StartScaprocessResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}/authorisations/{authorisationId}':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: Read the SCA Status of the payment authorisation
      description: >-
        This method returns the SCA status of a payment initiation's
        authorisation sub-resource.
      operationId: GetPaymentInitiationScaStatus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: authorisationId
          in: path
          description: Resource identification of the related SCA.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.ScaStatusResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
    put:
      tags:
        - PaymentInitiationServiceApi
      summary: Update PSU data for payment initiation
      description: >-
        This methods updates PSU data on the authorisation resource if needed. 
        It may authorise a payment within the Embedded SCA Approach where
        needed.  Independently from the SCA Approach it supports e.g. the
        selection of  the authentication method and a non-SCA PSU
        authentication.  There are several possible Update PSU Data requests in
        the context of payment initiation services needed,  which depends on the
        SCA approach:  * Redirect SCA Approach:   A specific Update PSU Data
        Request is applicable for      * the selection of authentication
        methods, before choosing the actual SCA approach. * Decoupled SCA
        Approach:   A specific Update PSU Data Request is only applicable for  
        * adding the PSU Identification, if not provided yet in the Payment
        Initiation Request or the Account Information Consent Request, or if no
        OAuth2 access token is used, or   * the selection of authentication
        methods. * Embedded SCA Approach:    The Update PSU Data Request might
        be used    * to add credentials as a first factor authentication data of
        the PSU and   * to select the authentication method and   * transaction
        authorisation.  The SCA Approach might depend on the chosen SCA method. 
        For that reason, the following possible Update PSU Data request can
        apply to all SCA approaches:  * Select an SCA method in case of several
        SCA methods are available for the customer.  There are the following
        request types on this access path:   * Update PSU Identification   *
        Update PSU Authentication   * Select PSU Autorization Method     
        WARNING: This method need a reduced header,      therefore many optional
        elements are not present.      Maybe in a later version the access path
        will change.   * Transaction Authorisation     WARNING: This method need
        a reduced header,      therefore many optional elements are not
        present.      Maybe in a later version the access path will change.
      operationId: UpdatePaymentPsuData
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: authorisationId
          in: path
          description: Resource identification of the related SCA.
          required: true
          type: string
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}/{paymentId}/status':
    get:
      tags:
        - PaymentInitiationServiceApi
      summary: Payment initiation status request
      description: Check the transaction status of a payment initiation.
      operationId: GetPaymentInitiationStatus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: paymentId
          in: path
          description: >-
            Resource identification of the generated payment initiation
            resource.
          required: true
          type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/ChaniaBank.API.Models.PaymentInitiationStatusResponse200Json
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  '/v1/{paymentService}/{paymentProduct}':
    post:
      tags:
        - PaymentInitiationServiceApi
      summary: Payment initiation request
      description: >-
        This method is used to initiate a payment at the ASPSP.  ## Variants of
        Payment Initiation Requests  This method to initiate a payment
        initiation at the ASPSP can be sent with either a JSON body or an
        pain.001 body depending on the payment product in the path.  There are
        the following **payment products**:    - Payment products with payment
        information in *JSON* format:     - ***sepa-credit-transfers***     -
        ***instant-sepa-credit-transfers***     - ***target-2-payments***     -
        ***cross-border-credit-transfers***   - Payment products with payment
        information in *pain.001* XML format:     -
        ***pain.001-sepa-credit-transfers***     -
        ***pain.001-instant-sepa-credit-transfers***     -
        ***pain.001-target-2-payments***     -
        ***pain.001-cross-border-credit-transfers***  Furthermore the request
        body depends on the **paymentService**   * ***payments***: A single
        payment initiation request.   * ***bulk-payments***: A collection of
        several payment iniatiation requests.        In case of a *pain.001*
        message there are more than one payments contained in the *pain.001
        message.          In case of a *JSON* there are several JSON payment
        blocks contained in a joining list.   * ***periodic-payments***:     
        Create a standing order initiation resource for recurrent i.e. periodic
        payments addressable under {paymentId}       with all data relevant for
        the corresponding payment product and the execution of the standing
        order contained in a JSON body.   This is the first step in the API to
        initiate the related recurring/periodic payment.    ## Single and
        mulitilevel SCA Processes  The Payment Initiation Requests are
        independent from the need of one ore multilevel  SCA processing, i.e.
        independent from the number of authorisations needed for the execution
        of payments.   But the response messages are specific to either one SCA
        processing or multilevel SCA processing.   For payment initiation with
        multilevel SCA, this specification requires an explicit start of the
        authorisation,  i.e. links directly associated with SCA processing like
        'scaRedirect' or 'scaOAuth' cannot be contained in the  response message
        of a Payment Initation Request for a payment, where multiple
        authorisations are needed.  Also if any data is needed for the next
        action, like selecting an SCA method is not supported in the response, 
        since all starts of the multiple authorisations are fully equal.  In
        these cases, first an authorisation sub-resource has to be generated
        following the 'startAuthorisation' link.
      operationId: InitiatePayment
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          description: "JSON request body for a payment inition request message \r\n            There are the following paymentProducts supported:\r\n            * \"sepa-credit-transfers\" with JSON-Body\r\n            * \"instant-sepa-credit-transfers\" with JSON-Body\r\n            * \"target-2-payments\" with JSON-Body\r\n            * \"cross-border-credit-transfers\" with JSON-Body\r\n            * \"pain.001-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT scheme\r\n            * \"pain.001-instant-sepa-credit-transfers\" with XML pain.001.001.03 body for SCT INST scheme\r\n            * \"pain.001-target-2-payments\" with pain.001 body. \r\n            Only country specific schemes are currently available\r\n            * \"pain.001-cross-border-credit-transfers\" with pain.001 body. \r\n            Only country specific schemes are currently available\r\n            There are the following paymentServices supported:\r\n            * \"payments\"\r\n            * \"periodic-payments\"\r\n            * \"bulk-paments\"\r\n            All optional, conditional and predefined but not yet used fields are defined."
          required: false
          schema:
            type: string
        - name: xRequestID
          in: header
          description: >-
            ID of the request, unique to the call, as determined by the
            initiating party.
          required: true
          type: string
          format: uuid
        - name: pSUIPAddress
          in: header
          description: >-
            The forwarded IP Address header field consists of the corresponding
            http request IP Address field between PSU and TPP.
          required: true
          type: string
        - name: paymentService
          in: path
          description: >-
            Payment service:  Possible values are: * payments * bulk-payments *
            periodic-payments
          required: true
          type: string
        - name: paymentProduct
          in: path
          description: >-
            The addressed payment product endpoint, e.g. for SEPA Credit
            Transfers (SCT). The ASPSP will publish which of the payment
            products/endpoints will be supported.  The following payment
            products are supported:   - sepa-credit-transfers   -
            instant-sepa-credit-transfers   - target-2-payments   -
            cross-border-credit-transfers   - pain.001-sepa-credit-transfers   -
            pain.001-instant-sepa-credit-transfers   -
            pain.001-target-2-payments   -
            pain.001-cross-border-credit-transfers  **Remark:** For all SEPA
            Credit Transfer based endpoints which accept XML encoding,  the XML
            pain.001 schemes provided by EPC are supported by the ASPSP as a
            minimum for the body content.  Further XML schemes might be
            supported by some communities.  **Remark:** For cross-border and
            TARGET-2 payments only community wide pain.001 schemes do exist. 
            There are plenty of country specificic scheme variants.
          required: true
          type: string
        - name: digest
          in: header
          description: >-
            Is contained if and only if the \"Signature\" element is contained
            in the header of the request.
          required: false
          type: string
        - name: signature
          in: header
          description: >-
            A signature of the request by the TPP on application level. This
            might be mandated by ASPSP.
          required: false
          type: string
        - name: tPPSignatureCertificate
          in: header
          description: >-
            The certificate used for signing the request, in base64 encoding. 
            Must be contained if a signature is contained.
          required: false
          type: string
          format: byte
        - name: PSU_ID
          in: header
          description: >-
            Client ID of the PSU in the ASPSP client interface. Might be
            mandated in the ASPSP's documentation. Is not contained if an OAuth2
            based authentication was performed in a pre-step or an OAuth2 based
            SCA was performed in an preceding AIS service in the same session.
          required: false
          type: string
        - name: pSUIDType
          in: header
          description: >-
            Type of the PSU-ID, needed in scenarios where PSUs have several
            PSU-IDs as access possibility.
          required: false
          type: string
        - name: pSUCorporateID
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: pSUCorporateIDType
          in: header
          description: >-
            Might be mandated in the ASPSP's documentation. Only used in a
            corporate context.
          required: false
          type: string
        - name: consentId
          in: header
          description: >-
            This data element may be contained, if the payment initiation
            transaction is part of a session, i.e. combined AIS/PIS service.
            This then contains the consentId of the related AIS consent, which
            was performed prior to this payment initiation.
          required: false
          type: string
        - name: tPPRedirectPreferred
          in: header
          description: >-
            If it equals \"true\", the TPP prefers a redirect over an embedded
            SCA approach. If it equals \"false\", the TPP prefers not to be
            redirected for SCA. The ASPSP will then choose between the Embedded
            or the Decoupled SCA approach, depending on the choice of the SCA
            procedure by the TPP/PSU. If the parameter is not used, the ASPSP
            will choose the SCA approach to be applied depending on the SCA
            method chosen by the TPP/PSU.
          required: false
          type: string
        - name: tPPRedirectURI
          in: header
          description: >-
            URI of the TPP, where the transaction flow shall be redirected to
            after a Redirect.  Mandated for the Redirect SCA Approach,
            specifically  when TPP-Redirect-Preferred equals \"true\". It is
            recommended to always use this header field.  **Remark for
            Future:**  This field might be changed to mandatory in the next
            version of the specification.
          required: false
          type: string
        - name: tPPNokRedirectURI
          in: header
          description: >-
            If this URI is contained, the TPP is asking to redirect the
            transaction flow to this address instead of the TPP-Redirect-URI in
            case of a negative result of the redirect SCA method. This might be
            ignored by the ASPSP.
          required: false
          type: string
        - name: tPPExplicitAuthorisationPreferred
          in: header
          description: >-
            If it equals \"true\", the TPP prefers to start the authorisation
            process separately,  e.g. because of the usage of a signing basket. 
            This preference might be ignored by the ASPSP, if a signing basket
            is not supported as functionality.  If it equals \"false\" or if the
            parameter is not used, there is no preference of the TPP.  This
            especially indicates that the TPP assumes a direct authorisation of
            the transaction in the next step,  without using a signing basket.
          required: false
          type: string
        - name: tPPRejectionNoFundsPreferred
          in: header
          description: >-
            If it equals \"true\" then the TPP prefers a rejection of the
            payment initiation in case the ASPSP is  providing an integrated
            confirmation of funds request an the result of this is that not
            sufficient  funds are available.  If it equals \"false\" then the
            TPP prefers that the ASPSP is dealing with the payment initiation
            like  in the ASPSPs online channel, potentially waiting for a
            certain time period for funds to arrive to initiate the payment. 
            This parameter might be ignored by the ASPSP.
          required: false
          type: string
        - name: pSUIPPort
          in: header
          description: >-
            The forwarded IP Port header field consists of the corresponding
            HTTP request IP Port field between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAccept
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptCharset
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptEncoding
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUAcceptLanguage
          in: header
          description: >-
            The forwarded IP Accept header fields consist of the corresponding
            HTTP request Accept header fields between PSU and TPP, if available.
          required: false
          type: string
        - name: pSUUserAgent
          in: header
          description: >-
            The forwarded Agent header field of the HTTP request between PSU and
            TPP, if available.
          required: false
          type: string
        - name: pSUHttpMethod
          in: header
          description: >-
            HTTP method used at the PSU ? TPP interface, if available. Valid
            values are: * GET * POST * PUT * PATCH * DELETE
          required: false
          type: string
        - name: pSUDeviceID
          in: header
          description: >-
            UUID (Universally Unique Identifier) for a device, which is used by
            the PSU, if available. UUID identifies either a device or a device
            dependant application installation. In case of an installation
            identification this ID need to be unaltered until removal from
            device.
          required: false
          type: string
          format: uuid
        - name: pSUGeoLocation
          in: header
          description: >-
            The forwarded Geo Location of the corresponding http request between
            PSU and TPP if available.
          required: false
          type: string
          pattern: '/GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}/'
      responses:
        '201':
          description: CREATED
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error400NGPIS'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error401NGPIS'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error403NGPIS'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error404NGPIS'
        '405':
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error405NGPIS'
        '406':
          description: Not Acceptable
        '408':
          description: Request Timeout
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ChaniaBank.API.Models.Error409NGPIS'
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
definitions:
  ChaniaBank.API.Models.Authorisations:
    description: An array of all authorisationIds
    required:
      - authorisationIds
    type: object
    properties:
      authorisationIds:
        description: Gets or Sets AuthorisationIds - An array of all authorisationIds
        type: array
        items:
          type: string
  ChaniaBank.API.Models.Error400NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 400.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage400AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage400AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - FORMATERROREnum
          - PARAMETERNOTCONSISTENTEnum
          - PARAMETERNOTSUPPORTEDEnum
          - SERVICEINVALIDEnum
          - RESOURCEUNKNOWNEnum
          - RESOURCEEXPIREDEnum
          - RESOURCEBLOCKEDEnum
          - TIMESTAMPINVALIDEnum
          - PERIODINVALIDEnum
          - SCAMETHODUNKNOWNEnum
          - CONSENTUNKNOWNEnum
          - SESSIONSNOTSUPPORTEDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.HrefType:
    description: Link to a resource
    type: object
    properties:
      href:
        description: Gets or Sets Href - Link to a resource
        type: string
  ChaniaBank.API.Models.TppMessageText:
    description: Additional explaining text to the TPP.
    type: object
    properties: {}
  ChaniaBank.API.Models.Error401NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage401AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage401AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CERTIFICATEINVALIDEnum
          - CERTIFICATEEXPIREDEnum
          - CERTIFICATEBLOCKEDEnum
          - CERTIFICATEREVOKEEnum
          - CERTIFICATEMISSINGEnum
          - SIGNATUREINVALIDEnum
          - SIGNATUREMISSINGEnum
          - CORPORATEIDINVALIDEnum
          - PSUCREDENTIALSINVALIDEnum
          - CONSENTINVALIDEnum
          - CONSENTEXPIREDEnum
          - TOKENUNKNOWNEnum
          - TOKENINVALIDEnum
          - TOKENEXPIREDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error403NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 403.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage403AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage403AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CONSENTUNKNOWNEnum
          - SERVICEBLOCKEDEnum
          - RESOURCEUNKNOWNEnum
          - RESOURCEEXPIREDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error404NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 404.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage404AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage404AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - UNKNOWNEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error405NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage405AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage405AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error406NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 406.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage406AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage406AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error409NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 409.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage409AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage409AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error429NGAIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 429.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage429AIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage429AIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - EXCEEDEDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.StartScaprocessResponse:
    description: Body of the JSON response for a Start SCA authorisation request.
    required:
      - scaStatus
      - authorisationId
      - _links
    type: object
    properties:
      scaStatus:
        description: Gets or Sets ScaStatus
        enum:
          - ReceivedEnum
          - PsuIdentifiedEnum
          - PsuAuthenticatedEnum
          - ScaMethodSelectedEnum
          - StartedEnum
          - FinalisedEnum
          - FailedEnum
          - ExemptedEnum
        type: string
      authorisationId:
        description: Gets or Sets AuthorisationId
        type: string
      scaMethods:
        description: Gets or Sets ScaMethods
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.AuthenticationObject'
      chosenScaMethod:
        $ref: '#/definitions/ChaniaBank.API.Models.ChosenScaMethod'
        description: Gets or Sets ChosenScaMethod
      challengeData:
        $ref: '#/definitions/ChaniaBank.API.Models.ChallengeData'
        description: Gets or Sets ChallengeData
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
      psuMessage:
        description: Gets or Sets PsuMessage - Text to be displayed to the PSU
        type: string
  ChaniaBank.API.Models.AuthenticationObject:
    description: Authentication Object
    required:
      - authenticationType
      - authenticationMethodId
    type: object
    properties:
      authenticationType:
        description: Gets or Sets AuthenticationType
        enum:
          - SMSOTPEnum
          - CHIPOTPEnum
          - PHOTOOTPEnum
          - PUSHOTPEnum
        type: string
      authenticationVersion:
        description: >-
          Depending on the \"authenticationType\". This version can be used by
          differentiating authentication tools used within performing OTP
          generation in the same authentication type. This version can be
          referred to in the ASPSP?s documentation.
        type: string
      authenticationMethodId:
        description: >-
          Gets or Sets AuthenticationMethodId - An identification provided by
          the ASPSP for the later identification of the authentication method
          selection.
        type: string
      name:
        description: >-
          This is the name of the authentication method defined by the PSU in
          the Online Banking frontend of the ASPSP. Alternatively this could be
          a description provided by the ASPSP like \"SMS OTP on phone +49160
          xxxxx 28\". This name shall be used by the TPP when presenting a list
          of authentication methods to the PSU, if available.
        type: string
      explanation:
        description: Detailed information about the SCA method for the PSU.
        type: string
  ChaniaBank.API.Models.ChosenScaMethod:
    description: ''
    type: object
    properties: {}
  ChaniaBank.API.Models.ChallengeData:
    description: >-
      It is contained in addition to the data element 'chosenScaMethod' if
      challenge data is needed for SCA. In rare cases this attribute is also
      used in the context of the 'startAuthorisationWithPsuAuthentication' link.
    type: object
    properties:
      image:
        format: byte
        description: >-
          PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64
          encoding, cp. [RFC4648]. This attribute is used only, when PHOTO_OTP
          or CHIP_OTP is the selected SCA method.
        type: string
      data:
        description: String challenge data
        type: string
      imageLink:
        description: A link where the ASPSP will provides the challenge image for the TPP.
        type: string
      otpMaxLength:
        format: int32
        description: The maximal length for the OTP to be typed in by the PSU.
        type: integer
      otpFormat:
        description: >-
          The format type of the OTP to be typed in. The admitted values are
          \"characters\" or \"integer\".
        enum:
          - CHARACTERS
          - INTEGER
        type: string
      additionalInformation:
        description: >-
          Additional explanation for the PSU to explain e.g. fallback mechanism
          for the chosen SCA method. The TPP is obliged to show this to the PSU.
        type: string
  ChaniaBank.API.Models.ConsentInformationResponse200Json:
    description: Body of the JSON response for a successfull get consent request.
    required:
      - access
      - recurringIndicator
      - validUntil
      - frequencyPerDay
      - lastActionDate
      - consentStatus
    type: object
    properties:
      access:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountAccess'
        description: Gets or Sets Access
      recurringIndicator:
        $ref: '#/definitions/ChaniaBank.API.Models.RecurringIndicator'
        description: Gets or Sets RecurringIndicator
      validUntil:
        format: date-time
        description: Gets or Sets ValidUntil
        type: string
      frequencyPerDay:
        format: int32
        description: >-
          Gets or Sets FrequencyPerDay - This field indicates the requested
          maximum frequency for an access without PSU involvement per day. For a
          one-off access, this attribute is set to \"1\".  The frequency needs
          to be greater equal to one.
        type: integer
      lastActionDate:
        format: date-time
        description: Gets or Sets LastActionDate
        type: string
      consentStatus:
        description: Gets or Sets ConsentStatus
        enum:
          - ReceivedEnum
          - RejectedEnum
          - ValidEnum
          - RevokedByPsuEnum
          - ExpiredEnum
          - TerminatedByTppEnum
        type: string
  ChaniaBank.API.Models.AccountAccess:
    description: Requested access services for a consent.
    type: object
    properties:
      accounts:
        description: >-
          Is asking for detailed account information.   If the array is empty,
          the TPP is asking for an accessible account list.  This may be
          restricted in a PSU/ASPSP authorization dialogue. If the array is
          empty, also the arrays for balances or transactions shall be empty, if
          used.
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
      balances:
        description: >-
          Is asking for balances of the addressed accounts.  If the array is
          empty, the TPP is asking for the balances of all accessible account
          lists.  This may be restricted in a PSU/ASPSP authorization dialogue.
          If the array is empty, also the arrays for accounts or transactions
          shall be empty, if used.
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
      transactions:
        description: >-
          Is asking for transactions of the addressed accounts.   If the array
          is empty, the TPP is asking for the transactions of all accessible
          account lists.  This may be restricted in a PSU/ASPSP authorization
          dialogue. If the array is empty, also the arrays for accounts or
          balances shall be empty, if used.
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
      availableAccounts:
        description: >-
          Optional if supported by API provider.  Only the values
          \"allAccounts\" or \"allAccountsWithBalances\" is admitted.
        enum:
          - ALLACCOUNTS
          - ALLACCOUNTSWITHBALANCES
        type: string
      allPsd2:
        description: >-
          Optional if supported by API provider.  Only the value \"allAccounts\"
          is admitted.
        enum:
          - ALLACCOUNTS
        type: string
  ChaniaBank.API.Models.RecurringIndicator:
    description: >-
      \"true\", if the consent is for recurring access to the account data. 
      \"false\", if the consent is for one access to the account data.
    type: object
    properties: {}
  ChaniaBank.API.Models.AccountReference:
    description: >-
      Reference to an account by either   * IBAN, of a payment accounts, or   *
      BBAN, for payment accounts if there is no IBAN, or    * the Primary
      Account Number (PAN) of a card, can be tokenised by the ASPSP due to PCI
      DSS requirements, or   * the Primary Account Number (PAN) of a card in a
      masked form, or   * an alias to access a payment account via a registered
      mobile phone number (MSISDN).
    type: object
    properties:
      iban:
        description: Gets or Sets Iban
        type: string
      bban:
        description: Gets or Sets Bban
        type: string
      pan:
        description: Gets or Sets Pan
        type: string
      maskedPan:
        description: Gets or Sets MaskedPan
        type: string
      msisdn:
        description: Gets or Sets Msisdn
        type: string
      currency:
        description: Gets or Sets Currency - ISO 4217 Alpha 3 currency code
        type: string
  ChaniaBank.API.Models.ScaStatusResponse:
    description: Body of the JSON response with SCA Status
    type: object
    properties:
      scaStatus:
        description: Gets or Sets ScaStatus
        enum:
          - ReceivedEnum
          - PsuIdentifiedEnum
          - PsuAuthenticatedEnum
          - ScaMethodSelectedEnum
          - StartedEnum
          - FinalisedEnum
          - FailedEnum
          - ExemptedEnum
        type: string
  ChaniaBank.API.Models.ConsentStatusResponse200:
    description: >-
      Body of the JSON response for a successful get status request for a
      consent.
    required:
      - consentStatus
    type: object
    properties:
      consentStatus:
        description: Gets or Sets ConsentStatus
        enum:
          - ReceivedEnum
          - RejectedEnum
          - ValidEnum
          - RevokedByPsuEnum
          - ExpiredEnum
          - TerminatedByTppEnum
        type: string
  ChaniaBank.API.Models.TransactionDetails:
    description: Transaction details
    required:
      - transactionAmount
    type: object
    properties:
      transactionId:
        description: >-
          the Transaction Id can be used as access-ID in the API, where more
          details on an transaction is offered.  If this data attribute is
          provided this shows that the AIS can get access on more details about
          this  transaction using the GET Transaction Details Request
        type: string
      entryReference:
        description: >-
          Is the identification of the transaction as used e.g. for reference
          for deltafunction on application level.  The same identification as
          for example used within camt.05x messages.
        type: string
      endToEndId:
        description: Unique end to end identity.
        type: string
      mandateId:
        description: 'Identification of Mandates, e.g. a SEPA Mandate ID.'
        type: string
      checkId:
        description: Identification of a Cheque.
        type: string
      creditorId:
        description: 'Identification of Creditors, e.g. a SEPA Creditor ID.'
        type: string
      bookingDate:
        format: date-time
        description: Gets or Sets BookingDate
        type: string
      valueDate:
        format: date-time
        description: >-
          The Date at which assets become available to the account owner in case
          of a credit.
        type: string
      transactionAmount:
        $ref: '#/definitions/ChaniaBank.API.Models.Amount'
        description: Gets or Sets TransactionAmount
      currencyExchange:
        description: Gets or Sets CurrencyExchange
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.ReportExchangeRate'
      creditorName:
        description: Gets or Sets CreditorName
        type: string
      creditorAccount:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
        description: Gets or Sets CreditorAccount
      ultimateCreditor:
        description: Gets or Sets UltimateCreditor
        type: string
      debtorName:
        description: Gets or Sets DebtorName
        type: string
      debtorAccount:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
        description: Gets or Sets DebtorAccount
      ultimateDebtor:
        description: Gets or Sets UltimateDebtor
        type: string
      remittanceInformationUnstructured:
        $ref: '#/definitions/ChaniaBank.API.Models.RemittanceInformationUnstructured'
        description: Gets or Sets RemittanceInformationUnstructured
      remittanceInformationStructured:
        description: >-
          Reference as contained in the structured remittance reference
          structure (without the surrounding XML structure).  Different from
          other places the content is containt in plain form not in form of a
          structered field.
        type: string
      additionalInformation:
        description: >-
          Might be used by the ASPSP to transport additional transaction related
          information to the PSU.
        type: string
      purposeCode:
        description: Gets or Sets PurposeCode
        enum:
          - BKDFEnum
          - BKFEEnum
          - BKFMEnum
          - BKIPEnum
          - BKPPEnum
          - CBLKEnum
          - CDCBEnum
          - CDCDEnum
          - CDCSEnum
          - CDDPEnum
          - CDOCEnum
          - CDQCEnum
          - ETUPEnum
          - FCOLEnum
          - MTUPEnum
          - ACCTEnum
          - CASHEnum
          - COLLEnum
          - CSDBEnum
          - DEPTEnum
          - INTCEnum
          - LIMAEnum
          - NETTEnum
          - BFWDEnum
          - CCIREnum
          - CCPCEnum
          - CCPMEnum
          - CCSMEnum
          - CRDSEnum
          - CRPREnum
          - CRSPEnum
          - CRTLEnum
          - EQPTEnum
          - EQUSEnum
          - EXPTEnum
          - EXTDEnum
          - FIXIEnum
          - FWBCEnum
          - FWCCEnum
          - FWSBEnum
          - FWSCEnum
          - MARGEnum
          - MBSBEnum
          - MBSCEnum
          - MGCCEnum
          - MGSCEnum
          - OCCCEnum
          - OPBCEnum
          - OPCCEnum
          - OPSBEnum
          - OPSCEnum
          - OPTNEnum
          - OTCDEnum
          - REPOEnum
          - RPBCEnum
          - RPCCEnum
          - RPSBEnum
          - RPSCEnum
          - RVPOEnum
          - SBSCEnum
          - SCIEEnum
          - SCIREnum
          - SCRPEnum
          - SHBCEnum
          - SHCCEnum
          - SHSLEnum
          - SLEBEnum
          - SLOAEnum
          - SWBCEnum
          - SWCCEnum
          - SWPTEnum
          - SWSBEnum
          - SWSCEnum
          - TBASEnum
          - TBBCEnum
          - TBCCEnum
          - TRCPEnum
          - AGRTEnum
          - ARENEnum
          - BEXPEnum
          - BOCEEnum
          - COMCEnum
          - CPYREnum
          - GDDSEnum
          - GDSVEnum
          - GSCBEnum
          - LICFEnum
          - MP2BEnum
          - POPEEnum
          - ROYAEnum
          - SCVEEnum
          - SERVEnum
          - SUBSEnum
          - SUPPEnum
          - TRADEnum
          - CHAREnum
          - COMTEnum
          - MP2PEnum
          - ECPGEnum
          - ECPREnum
          - ECPUEnum
          - EPAYEnum
          - CLPREnum
          - COMPEnum
          - DBTCEnum
          - GOVIEnum
          - HLRPEnum
          - HLSTEnum
          - INPCEnum
          - INPREnum
          - INSCEnum
          - INSUEnum
          - INTEEnum
          - LBRIEnum
          - LIFIEnum
          - LOANEnum
          - LOAREnum
          - PENOEnum
          - PPTIEnum
          - RELGEnum
          - RINPEnum
          - TRFDEnum
          - FORWEnum
          - FXNTEnum
          - ADMGEnum
          - ADVAEnum
          - BCDMEnum
          - BCFGEnum
          - BLDMEnum
          - BNETEnum
          - CBFFEnum
          - CBFREnum
          - CCRDEnum
          - CDBLEnum
          - CFEEEnum
          - CGDDEnum
          - CORTEnum
          - COSTEnum
          - CPKCEnum
          - DCRDEnum
          - DSMTEnum
          - DVPMEnum
          - EDUCEnum
          - FACTEnum
          - FANDEnum
          - FCPMEnum
          - FEESEnum
          - GOVTEnum
          - ICCPEnum
          - IDCPEnum
          - IHRPEnum
          - INSMEnum
          - IVPTEnum
          - MCDMEnum
          - MCFGEnum
          - MSVCEnum
          - NOWSEnum
          - OCDMEnum
          - OCFGEnum
          - OFEEEnum
          - OTHREnum
          - PADDEnum
          - PTSPEnum
          - RCKEEnum
          - RCPTEnum
          - REBTEnum
          - REFUEnum
          - RENTEnum
          - REODEnum
          - RIMBEnum
          - RPNTEnum
          - RRBNEnum
          - RVPMEnum
          - SLPIEnum
          - SPLTEnum
          - STDYEnum
          - TBANEnum
          - TBILEnum
          - TCSCEnum
          - TELIEnum
          - TMPGEnum
          - TPRIEnum
          - TPRPEnum
          - TRNCEnum
          - TRVCEnum
          - WEBIEnum
          - ANNIEnum
          - CAFIEnum
          - CFDIEnum
          - CMDTEnum
          - DERIEnum
          - DIVDEnum
          - FREXEnum
          - HEDGEnum
          - INVSEnum
          - PRMEEnum
          - SAVGEnum
          - SECUEnum
          - SEPIEnum
          - TREAEnum
          - UNITEnum
          - FNETEnum
          - FUTREnum
          - ANTSEnum
          - CVCFEnum
          - DMEQEnum
          - DNTSEnum
          - HLTCEnum
          - HLTIEnum
          - HSPCEnum
          - ICRFEnum
          - LTCFEnum
          - MAFCEnum
          - MARFEnum
          - MDCSEnum
          - VIEWEnum
          - CDEPEnum
          - SWFPEnum
          - SWPPEnum
          - SWRSEnum
          - SWUFEnum
          - ADCSEnum
          - AEMPEnum
          - ALLWEnum
          - ALMYEnum
          - BBSCEnum
          - BECHEnum
          - BENEEnum
          - BONUEnum
          - CCHDEnum
          - COMMEnum
          - CSLPEnum
          - GFRPEnum
          - GVEAEnum
          - GVEBEnum
          - GVECEnum
          - GVEDEnum
          - GWLTEnum
          - HRECEnum
          - PAYREnum
          - PEFCEnum
          - PENSEnum
          - PRCPEnum
          - RHBSEnum
          - SALAEnum
          - SSBEEnum
          - LBINEnum
          - LCOLEnum
          - LFEEEnum
          - LMEQEnum
          - LMFIEnum
          - LMRKEnum
          - LREBEnum
          - LREVEnum
          - LSFLEnum
          - ESTXEnum
          - FWLVEnum
          - GSTXEnum
          - HSTXEnum
          - INTXEnum
          - NITXEnum
          - PTXPEnum
          - RDTXEnum
          - TAXSEnum
          - VATXEnum
          - WHLDEnum
          - TAXREnum
          - B112Enum
          - BR12Enum
          - TLRFEnum
          - TLRREnum
          - AIRBEnum
          - BUSBEnum
          - FERBEnum
          - RLWYEnum
          - TRPTEnum
          - CBTVEnum
          - ELECEnum
          - ENRGEnum
          - GASBEnum
          - NWCHEnum
          - NWCMEnum
          - OTLCEnum
          - PHONEnum
          - UBILEnum
          - WTEREnum
        type: string
      bankTransactionCode:
        description: "Gets or Sets BankTransactionCode - Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022.   \r\nThis code type is concatenating the three ISO20022 Codes    \r\n* Domain Code,    * Family Code, and    * SubFamiliy Code  by hyphens, \r\nresulting in �DomainCode�-�FamilyCode�-�SubFamilyCode�."
        type: string
      proprietaryBankTransactionCode:
        $ref: '#/definitions/ChaniaBank.API.Models.ProprietaryBankTransactionCode'
        description: Gets or Sets ProprietaryBankTransactionCode
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.Amount:
    description: ''
    required:
      - currency
      - amount
    type: object
    properties:
      currency:
        description: Gets or Sets Currency - ISO 4217 Alpha 3 currency code
        type: string
      amount:
        format: double
        description: Gets or Sets _Amount
        type: number
  ChaniaBank.API.Models.ReportExchangeRate:
    description: Exchange Rate
    required:
      - sourceCurrency
      - exchangeRate
      - unitCurrency
      - targetCurrency
      - quotationDate
    type: object
    properties:
      sourceCurrency:
        description: Gets or Sets SourceCurrency - ISO 4217 Alpha 3 currency code
        type: string
      exchangeRate:
        description: Gets or Sets ExchangeRate
        type: string
      unitCurrency:
        description: Gets or Sets UnitCurrency
        type: string
      targetCurrency:
        description: Gets or Sets TargetCurrency - ISO 4217 Alpha 3 currency code
        type: string
      quotationDate:
        format: date-time
        description: Gets or Sets QuotationDate
        type: string
      contractIdentification:
        description: Gets or Sets ContractIdentification
        type: string
  ChaniaBank.API.Models.RemittanceInformationUnstructured:
    description: Unstructured remittance information
    type: object
    properties: {}
  ChaniaBank.API.Models.ProprietaryBankTransactionCode:
    description: >-
      Proprietary bank transaction code as used within a community or within an
      ASPSP e.g.  for MT94x based transaction reports.
    type: object
    properties: {}
  ChaniaBank.API.Models.TransactionsResponse200Json:
    description: >-
      Body of the JSON response for a successful read transaction list request.
      This account report contains transactions resulting from the query
      parameters.
    type: object
    properties:
      account:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
        description: Gets or Sets Account
      transactions:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountReport'
        description: Gets or Sets Transactions
      balances:
        description: >-
          Gets or Sets Balances - A list of balances regarding this account,
          e.g. the current balance, the last booked balance. The list migght be
          restricted to the current ballance.
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.Balance'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.AccountReport:
    description: >-
      JSON based account report. This account report contains transactions
      resulting from the query parameters.  'booked' shall be contained if
      bookingStatus parameter is set to \"booked\" or \"both\".  'pending' is
      not contained if the bookingStatus parameter is set to \"booked\".
    required:
      - _links
    type: object
    properties:
      booked:
        description: Gets or Sets Booked
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TransactionDetails'
      pending:
        description: Gets or Sets Pending
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TransactionDetails'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.Balance:
    description: A single balance element
    required:
      - balanceAmount
      - balanceType
    type: object
    properties:
      balanceAmount:
        $ref: '#/definitions/ChaniaBank.API.Models.Amount'
        description: Gets or Sets BalanceAmount
      balanceType:
        description: Gets or Sets BalanceType
        enum:
          - ClosingBookedEnum
          - ExpectedEnum
          - AuthorisedEnum
          - OpeningBookedEnum
          - InterimAvailableEnum
          - InterimBookedEnum
          - ForwardAvailableEnum
          - NonInvoicedEnum
        type: string
      lastChangeDateTime:
        format: date-time
        description: >-
          This data element might be used to indicate e.g. with the expected or
          booked balance that no action is known  on the account, which is not
          yet booked.
        type: string
      referenceDate:
        format: date-time
        description: Reference date of the balance
        type: string
      lastCommittedTransaction:
        description: >-
          \"entryReference\" of the last commited transaction to support the TPP
          in identifying whether all  PSU transactions are already known.
        type: string
  ChaniaBank.API.Models.AccountDetails:
    description: >-
      The ASPSP shall give at least one of the account reference identifiers:  
      - iban   - bban   - pan   - maskedPan   - msisdn If the account is a
      multicurrency account currency code in \"currency\" is set to \"XXX\".
    required:
      - currency
    type: object
    properties:
      resourceId:
        description: >-
          This shall be filled, if addressable resource are created by the ASPSP
          on the /accounts or /card-accounts endpoint.
        type: string
      iban:
        description: Gets or Sets Iban
        type: string
      bban:
        description: Gets or Sets Bban
        type: string
      msisdn:
        description: Gets or Sets Msisdn
        type: string
      currency:
        description: Gets or Sets Currency - ISO 4217 Alpha 3 currency code
        type: string
      name:
        description: Name of the account given by the bank or the PSU in online-banking.
        type: string
      product:
        description: 'Product name of the bank for this account, proprietary definition.'
        type: string
      cashAccountType:
        description: >-
          Gets or Sets CashAccountType - ExternalCashAccountType1Code from ISO
          20022.
        type: string
      status:
        description: Gets or Sets Status
        enum:
          - EnabledEnum
          - DeletedEnum
          - BlockedEnum
        type: string
      bic:
        description: Gets or Sets Bic
        type: string
      linkedAccounts:
        description: >-
          Case of a set of pending card transactions, the APSP will provide the
          relevant cash account the card is set up on.
        type: string
      usage:
        description: >-
          Specifies the usage of the account   * PRIV: private personal
          account   * ORGA: professional account
        enum:
          - PRIV
          - ORGA
        type: string
      details:
        description: >-
          Specifications that might be provided by the ASPSP   - characteristics
          of the account   - characteristics of the relevant card
        type: string
      balances:
        description: >-
          Gets or Sets Balances - A list of balances regarding this account,
          e.g. the current balance, the last booked balance. The list migght be
          restricted to the current ballance.
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.Balance'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.ConfirmationOfFunds:
    description: >-
      JSON Request body for the \"Confirmation of Funds Service\" 
      &lt;table&gt;  &lt;tr&gt;    &lt;td&gt;cardNumber&lt;/td&gt;   
      &lt;td&gt;String &lt;/td&gt;   &lt;td&gt;Optional&lt;/td&gt;  
      &lt;td&gt;Card Number of the card issued by the PIISP. Should be delivered
      if available.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt;  
      &lt;td&gt;account&lt;/td&gt;   &lt;td&gt; Account Reference&lt;/td&gt;  
      &lt;td&gt;Mandatory&lt;/td&gt;   &lt;td&gt;PSU's account
      number.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt;    &lt;td&gt;payee&lt;/td&gt;  
      &lt;td&gt;Max70Text&lt;/td&gt;   &lt;td&gt;Optional&lt;/td&gt;  
      &lt;td&gt;The merchant where the card is accepted as an information to the
      PSU.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt;  
      &lt;td&gt;instructedAmount&lt;/td&gt;   &lt;td&gt;Amount&lt;/td&gt;  
      &lt;td&gt;Mandatory&lt;/td&gt;   &lt;td&gt;Transaction amount to be
      checked within the funds check mechanism.&lt;/td&gt; &lt;/tr&gt; 
      &lt;/table&gt;
    required:
      - account
      - instructedAmount
    type: object
    properties:
      cardNumber:
        description: >-
          Card Number of the card issued by the PIISP.  Should be delivered if
          available.
        type: string
      account:
        $ref: '#/definitions/ChaniaBank.API.Models.AccountReference'
        description: Gets or Sets Account
      payee:
        description: Name payee
        type: string
      instructedAmount:
        $ref: '#/definitions/ChaniaBank.API.Models.Amount'
        description: Gets or Sets InstructedAmount
  ChaniaBank.API.Models.ConfirmationOfFundsResponse200:
    description: >-
      Equals \"true\" if sufficient funds are available at the time of the
      request,  \"false\" otherwise.
    type: object
    properties:
      fundsAvailable:
        description: Gets or Sets FundsAvailable
        type: boolean
  ChaniaBank.API.Models.Error401NGPIIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage401PIIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage401PIIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CERTIFICATEINVALIDEnum
          - CERTIFICATEEXPIREDEnum
          - CERTIFICATEBLOCKEDEnum
          - CERTIFICATEREVOKEEnum
          - CERTIFICATEMISSINGEnum
          - SIGNATUREINVALIDEnum
          - SIGNATUREMISSINGEnum
          - CORPORATEIDINVALIDEnum
          - PSUCREDENTIALSINVALIDEnum
          - CONSENTINVALIDEnum
          - CONSENTEXPIREDEnum
          - TOKENUNKNOWNEnum
          - TOKENINVALIDEnum
          - TOKENEXPIREDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error403NGPIIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 403.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage403PIIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage403PIIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CONSENTUNKNOWNEnum
          - SERVICEBLOCKEDEnum
          - RESOURCEUNKNOWNEnum
          - RESOURCEEXPIREDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error404NGPIIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 404.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage404PIIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage404PIIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - UNKNOWNEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error405NGPIIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage405PIIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage405PIIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error409NGPIIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 409.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage409PIIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage409PIIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Branch:
    required:
      - organisation
      - branchIdentification
      - branchType
      - address
      - telephoneNumber
      - openingTimes
      - customerSegment
      - atmAtBranch
    type: object
    properties:
      organisation:
        $ref: '#/definitions/ChaniaBank.API.Models.Organisation'
        description: Organisation
      branchName:
        description: >-
          Name by which a party is known and which is usually used to identify
          that party
        maxLength: 35
        minLength: 1
        type: string
      branchIdentification:
        description: >-
          Unique and unambiguous identification of a retail branch of a
          financial institution
        maxLength: 35
        minLength: 1
        type: string
      branchType:
        description: Information on the type of branch
        enum:
          - physical
          - mobile
        type: string
      address:
        $ref: '#/definitions/ChaniaBank.API.Models.Address'
        description: Postal Address
      branchDescription:
        description: Description of the branch
        maxLength: 140
        minLength: 1
        type: string
      branchPhoto:
        description: Image related to the branch
        type: string
      telephoneNumber:
        description: >-
          Collection of information that identifies a phone number, as defined
          by telecom services.
        pattern: '^[+][0-9]{1,3}-[0-9()+-]{1,30}$'
        type: string
      alternatePhone:
        type: array
        items:
          type: string
      faxNumber:
        description: >-
          Collection of information that identifies a FAX number, as defined by
          telecom services.
        type: array
        items:
          type: string
      geographicLocation:
        $ref: '#/definitions/ChaniaBank.API.Models.GeographicLocation'
        description: Geographic Coordinates
      daysOfTheWeek:
        description: >-
          Description on when the mobile branch is available. e.g. The weekend
          of Glastonbury festival; or Mondays and during the shrimp season also
          Wednesdays
        maxLength: 35
        minLength: 1
        type: string
      stopName:
        description: Name of the stop of the mobile branch
        maxLength: 15
        minLength: 1
        type: string
      arrivalTime:
        description: Time that the mobile branch is scheduled to arrive
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
      departureTime:
        description: Time that the mobile branch is scheduled to depart
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
      parkingLocation:
        description: >-
          Place where the mobile branch is located, such as between the news
          agent and the church.
        maxLength: 50
        minLength: 1
        type: string
      openingTimes:
        description: Branch Opening Times
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.OpeningTimeInfo'
      plannedBranchClosure:
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.PlannedBranchClosure'
      accessibilityTypes:
        description: Information about the accessibility
        enum:
          - audioCashMachine
          - automaticDoors
          - chairAccess
          - driveThru
          - externalRamp
          - inductionLoop
          - internalRamp
          - levelAccess
          - lowerLevelCounter
          - wheelchairAccess
        type: string
      branchSelfServeServiceName:
        type: array
        items:
          enum:
            - accountVerificationService
            - assistedServiceCounter
            - businessDepositTerminal
            - cashChequeDepositMachineCoin
            - cashChequeDepositMachineNoCoin
            - externalAtmAudio
            - externalAtmNoAudio
            - externalQuickServicePoint
            - internalAtmAudio
            - internalAtmNoAudio
            - internalQuickServicePoint
            - lodgementDevice
            - onlineBankingPoint
            - quickDeposit
            - saturdayCounterService
            - selfServiceAccountOpening
            - statementPrinter
          type: string
      branchOtherSelfServices:
        description: Self Services not described in BranchSelfServeServiceName
        type: array
        items:
          type: string
      branchMediatedServiceName:
        description: Information about mediated branch facilities
        type: array
        items:
          enum:
            - bureauDeChange
            - businessCounter
            - cardIssuanceFacility
            - counterServices
            - driveThru
            - mortgageAdvisor
            - nightSafe
            - onDemandCurrency
            - premierCounter
            - videoBanking
            - wheelChairAccess
          type: string
      branchOtherMediatedServices:
        description: Mediated Services not described in BranchMediatedServiceName
        type: array
        items:
          type: string
      branchFacilitiesName:
        description: Information about branch facilities
        type: array
        items:
          enum:
            - businessITSupport
            - collectionLockers
            - meetingRooms
            - parking
            - wifi
          type: string
      customerSegment:
        description: Customer segment which the branch is able to service
        type: array
        items:
          enum:
            - business
            - corporate
            - personal
            - premier
            - private
            - select
            - sME
            - wealth
          type: string
      branchOtherFacilities:
        description: Any other facilities not mentioned in BranchFacilitiesName
        type: array
        items:
          type: string
      atmAtBranch:
        description: Indicated whether an ATM is at the branch
        type: boolean
  ChaniaBank.API.Models.Organisation:
    description: Organisation
    required:
      - parentOrganisation
      - brand
    type: object
    properties:
      parentOrganisation:
        $ref: '#/definitions/ChaniaBank.API.Models.ParentOrganisation'
        description: Parent organisation
      brand:
        $ref: '#/definitions/ChaniaBank.API.Models.Brand'
        description: Brand
  ChaniaBank.API.Models.Address:
    description: ''
    required:
      - country
    type: object
    properties:
      street:
        description: Gets or Sets Street
        type: string
      buildingNumber:
        description: Gets or Sets BuildingNumber
        type: string
      city:
        description: Gets or Sets City
        type: string
      postalCode:
        description: Gets or Sets PostalCode
        type: string
      country:
        description: Gets or Sets Country - ISO 3166 ALPHA2 country code
        type: string
  ChaniaBank.API.Models.GeographicLocation:
    description: GeographicLocation
    required:
      - latitude
      - longitude
    type: object
    properties:
      latitude:
        description: The Latitude measured in decimal format according to ISO 213
        pattern: '^-?\d{1,3}\.\d{1,8}$'
        type: string
      longitude:
        description: The longitude measured in decimal format according to ISO 213
        pattern: '^-?\d{1,3}\.\d{1,8}$'
        type: string
  ChaniaBank.API.Models.OpeningTimeInfo:
    required:
      - openingDay
      - openingTime
      - closingTime
    type: object
    properties:
      openingDay:
        description: Day of the week
        maxLength: 35
        minLength: 1
        enum:
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - public_and_Bank_Holiday
        type: string
      openingTime:
        description: >-
          ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time
          with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
      closingTime:
        description: >-
          ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time
          with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
      unavailableStartTime:
        description: >-
          ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time
          with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
      unavailableFinishTime:
        description: >-
          ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time
          with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm
        pattern: >-
          ^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\d{3})|(^24:00:00\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$
        type: string
  ChaniaBank.API.Models.PlannedBranchClosure:
    description: Planned branch closure
    type: object
    properties:
      startDate:
        description: Date when a branch is due to close temporarily or permanently
        pattern: '^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$'
        type: string
      endDate:
        description: Date when a branch is due to re-open following temporary closure
        pattern: '^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$'
        type: string
  ChaniaBank.API.Models.ParentOrganisation:
    description: ParentOrganisation
    required:
      - organisationName
    type: object
    properties:
      lei:
        description: The LEI ID of the organisation
        pattern: '^[A-Z0-9]{18,18}[0-9]{2,2}$'
        type: string
      bic:
        description: The BIC from the organisation
        pattern: '[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?'
        type: string
      organisationName:
        $ref: '#/definitions/ChaniaBank.API.Models.OrganisationName'
        description: Organisation Name
  ChaniaBank.API.Models.Brand:
    description: Brand Info
    required:
      - trademarkIPOCode
      - trademarkID
    type: object
    properties:
      trademarkIPOCode:
        description: "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights \r\nincluding patents, designs, trademarks and copyright. (Code: UK or EU only)"
        enum:
          - uK
          - eU
        type: string
      trademarkID:
        description: >-
          The trademark number that has been registered with the Intellectual
          Property Office. Note: The 2 letter IPO prefix should be omitted
        maxLength: 35
        minLength: 1
        type: string
  ChaniaBank.API.Models.OrganisationName:
    description: OrganisationName
    required:
      - legalName
      - distinctiveTitle
    type: object
    properties:
      legalName:
        description: Legal Name of the organisation
        maxLength: 35
        minLength: 1
        type: string
      distinctiveTitle:
        description: Distinctive Title of the organisation
        maxLength: 35
        minLength: 1
        type: string
  ChaniaBank.API.Models.ATM:
    description: ATM
    required:
      - organisation
      - atmid
      - address
      - geographicLocation
      - supportedLanguages
      - atmServices
      - currency
    type: object
    properties:
      organisation:
        $ref: '#/definitions/ChaniaBank.API.Models.Organisation'
        description: Organisation
      branchIdentification:
        description: >-
          Unique and unambiguous identification of a retail branch of a
          financial institution
        maxLength: 35
        minLength: 1
        type: string
      atmid:
        description: ATM terminal device identification for the acquirer and the issuer
        maxLength: 35
        minLength: 1
        type: string
      locationCategory:
        description: Indicates the environment of the ATM
        enum:
          - airport
          - bankSpecialisedOutlet
          - branchExternal
          - branchInternal
          - branchLobby
          - bureauDeChange
          - coachStation
          - commercialSpaceInternal
          - convenienceStore
          - exhibitionCentre
          - factoryOrOffice
          - fillingStation
          - financialInstitution
          - governmentOffice
          - hospital
          - hotel
          - kioskPod
          - leisureCentre
          - pleasurePark
          - publicHouse
          - railwayStation
          - remoteUnit
          - retailerDepartmentStore
          - retailerOutlet
          - seaportTerminal
          - serviceStation
          - shoppingCentreExternal
          - shoppingCentreInternal
          - storageDepot
          - supermarketExternal
          - supermarketInternal
          - undergroundRailwayStation
          - universityOrCollege
        type: string
      siteID:
        description: 'Site identifying code, where ATM is located'
        maxLength: 35
        minLength: 1
        type: string
      siteName:
        description: 'Site identifying name, where ATM is located'
        maxLength: 35
        minLength: 1
        type: string
      address:
        $ref: '#/definitions/ChaniaBank.API.Models.Address'
        description: Postal Address
      geographicLocation:
        $ref: '#/definitions/ChaniaBank.API.Models.GeographicLocation'
        description: Geographic Coordinates
      accessibilityTypes:
        description: Information about the accessibility
        type: array
        items:
          enum:
            - audioCashMachine
            - automaticDoors
            - chairAccess
            - driveThru
            - externalRamp
            - inductionLoop
            - internalRamp
            - levelAccess
            - lowerLevelCounter
            - wheelchairAccess
          type: string
      supportedLanguages:
        description: Languages that the ATM supports
        type: array
        items:
          type: string
      atmServices:
        description: Information about ATM services
        type: array
        items:
          enum:
            - balance
            - billPayments
            - cashDeposits
            - cashWithdrawal
            - charityDonation
            - chequeBookRequest
            - chequeDeposits
            - fastCash
            - miniStatement
            - mobileBankingRegistration
            - mobilePaymentRegistration
            - mobilePhoneTopUp
            - orderStatement
            - pINActivation
            - pINChange
          type: string
      additionalATMServices:
        description: ATM Service Description
        type: array
        items:
          type: string
      currency:
        description: Defines currency type available for dispense
        type: array
        items:
          type: string
      minimumValueDispensed:
        description: Minimum currency denominations usually available
        enum:
          - μΙΝ_5
          - μΙΝ_10
          - μΙΝ_20
          - μΙΝ_50
          - μΙΝ_100
        type: string
  ChaniaBank.API.Models.PaymentInitiationCancelResponse202:
    description: Body of the response for a successful cancel payment request.
    required:
      - transactionStatus
    type: object
    properties:
      transactionStatus:
        description: Gets or Sets TransactionStatus
        enum:
          - ACCCEnum
          - ACCPEnum
          - ACSCEnum
          - ACSPEnum
          - ACTCEnum
          - ACWCEnum
          - ACWPEnum
          - RCVDEnum
          - PDNGEnum
          - RJCTEnum
          - CANCEnum
          - ACFCEnum
          - PATCEnum
          - PARTEnum
        type: string
      scaMethods:
        description: Gets or Sets ScaMethods
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.AuthenticationObject'
      chosenScaMethod:
        $ref: '#/definitions/ChaniaBank.API.Models.ChosenScaMethod'
        description: Gets or Sets ChosenScaMethod
      challengeData:
        $ref: '#/definitions/ChaniaBank.API.Models.ChallengeData'
        description: Gets or Sets ChallengeData
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.Error400NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 400.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage400PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage400PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - FORMATERROREnum
          - PARAMETERNOTCONSISTENTEnum
          - PARAMETERNOTSUPPORTEDEnum
          - SERVICEINVALIDEnum
          - RESOURCEUNKNOWNEnum
          - RESOURCEEXPIREDEnum
          - RESOURCEBLOCKEDEnum
          - TIMESTAMPINVALIDEnum
          - PERIODINVALIDEnum
          - SCAMETHODUNKNOWNEnum
          - CONSENTUNKNOWNEnum
          - PAYMENTFAILEDEnum
          - EXECUTIONDATEINVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error401NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage401PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage401PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CERTIFICATEINVALIDEnum
          - CERTIFICATEEXPIREDEnum
          - CERTIFICATEBLOCKEDEnum
          - CERTIFICATEREVOKEEnum
          - CERTIFICATEMISSINGEnum
          - SIGNATUREINVALIDEnum
          - SIGNATUREMISSINGEnum
          - CORPORATEIDINVALIDEnum
          - PSUCREDENTIALSINVALIDEnum
          - CONSENTINVALIDEnum
          - CONSENTEXPIREDEnum
          - TOKENUNKNOWNEnum
          - TOKENINVALIDEnum
          - TOKENEXPIREDEnum
          - REQUIREDKIDMISSINGEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error403NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 403.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage403PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage403PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CONSENTUNKNOWNEnum
          - SERVICEBLOCKEDEnum
          - RESOURCEUNKNOWNEnum
          - RESOURCEEXPIREDEnum
          - PRODUCTINVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error404NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 404.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage404PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage404PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - RESOURCEUNKNOWNEnum
          - PRODUCTUNKNOWNEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error405NGPISCANC:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage405PISCANC'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage405PISCANC:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - CANCELLATIONINVALIDEnum
          - SERVICEINVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error409NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 409.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage409PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage409PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.Error405NGPIS:
    description: >-
      NextGenPSD2 specific definition of reporting error information in case of
      a HTTP error code 401.
    type: object
    properties:
      tppMessages:
        description: Gets or Sets TppMessages
        type: array
        items:
          $ref: '#/definitions/ChaniaBank.API.Models.TppMessage405PIS'
      _links:
        description: Gets or Sets Links
        type: object
        additionalProperties:
          $ref: '#/definitions/ChaniaBank.API.Models.HrefType'
  ChaniaBank.API.Models.TppMessage405PIS:
    description: ''
    required:
      - category
      - code
    type: object
    properties:
      category:
        description: Gets or Sets Category
        enum:
          - ERROREnum
          - WARNINGEnum
        type: string
      code:
        description: Gets or Sets Code
        enum:
          - INVALIDEnum
        type: string
      path:
        description: Gets or Sets Path
        type: string
      text:
        $ref: '#/definitions/ChaniaBank.API.Models.TppMessageText'
        description: Gets or Sets Text
  ChaniaBank.API.Models.PaymentInitiationStatusResponse200Json:
    description: >-
      Body of the response for a successful payment initiation status request in
      case of an JSON based endpoint.
    required:
      - transactionStatus
    type: object
    properties:
      transactionStatus:
        description: Gets or Sets TransactionStatus
        enum:
          - ACCCEnum
          - ACCPEnum
          - ACSCEnum
          - ACSPEnum
          - ACTCEnum
          - ACWCEnum
          - ACWPEnum
          - RCVDEnum
          - PDNGEnum
          - RJCTEnum
          - CANCEnum
          - ACFCEnum
          - PATCEnum
          - PARTEnum
        type: string
securityDefinitions: {}
